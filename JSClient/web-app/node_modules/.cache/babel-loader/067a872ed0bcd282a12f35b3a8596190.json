{"ast":null,"code":"var _jsxFileName = \"/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/Game/Game.js\";\nimport React, { Component } from 'react';\nimport Header from \"../BasicComponents/Header\";\nimport Home from \"../Home/Home\";\nimport Login from \"../Login/Login\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport userData from \"../axiosCalls.js\";\nimport io from \"socket.io-client\";\nimport { Alert, ListGroup, Button, ListGroupItem, Modal, Nav, Card, Badge, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { socket } from \"../socket.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPlayer = player => {\n      if (player._name != this.props.location.state.username) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          text: \"black\",\n          style: {\n            marginRight: \"1vw\",\n            backgroundColor: \"#C3770F\",\n            opacity: player._isFolded || player._isBankrupt || !player._connected ? \"50%\" : \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: player._name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Balance: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"$\", player._balance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 67\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Investment: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"$\", player._investment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, player._client_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this);\n      }\n    };\n\n    this.renderMyInfo = me => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        text: \"black\",\n        style: {\n          backgroundColor: \"#C3770F\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Your balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.state.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Your investment: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: me._investment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)\n      }, me._client_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderCard = (card, index) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          marginRight: \"1vw\",\n          width: \"6.5vw\"\n        },\n        src: this.decodeCard(card)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this);\n    };\n\n    this.decodeCard = card => {\n      if (card != '') {\n        let array = card.split(\" \");\n        let suit = array[1].toLowerCase();\n        let rank = array[3];\n\n        switch (rank) {\n          case \"11\":\n            rank = \"jack\";\n            break;\n\n          case \"12\":\n            rank = \"queen\";\n            break;\n\n          case \"13\":\n            rank = \"king\";\n            break;\n\n          case \"14\":\n            rank = \"ace\";\n            break;\n        }\n\n        return \"images/\" + rank + \"_of_\" + suit + \"s.png\";\n      } else {\n        return \"images/back.png\";\n      }\n    };\n\n    this.chooseOption = event => {\n      event.preventDefault();\n      console.log(event.target.name);\n\n      switch (event.target.name) {\n        case \"CheckorCall\":\n          this.setState({\n            option: \"1\"\n          });\n          break;\n\n        case \"Fold\":\n          this.setState({\n            option: \"2\"\n          });\n          break;\n\n        case \"Raise\":\n          this.setState({\n            option: \"3\"\n          });\n          break;\n      }\n    };\n\n    this.raiseSlider = event => {\n      event.preventDefault();\n      this.setState({\n        raiseAmount: event.target.value\n      });\n    };\n\n    this.handleLeave = event => {\n      event.preventDefault();\n      socket.disconnect();\n    };\n\n    this.state = {\n      isLoggedIn: true,\n      stillIn: true,\n      is_vip: false,\n      balance: null,\n      theList: [],\n      cards: ['', '', '', '', ''],\n      hand: [],\n      dealer: '',\n      small_blind: '',\n      big_blind: '',\n      minimum_bet: '',\n      round_num: '0',\n      pot: 0,\n      myTurn: false,\n      theMessage: 'GAME HAS BEGUN',\n      theCheckorCall: 'Check',\n      raiseAmount: 50,\n      option: '',\n      modal: false\n    };\n    this.handleLeave = this.handleLeave.bind(this);\n    this.renderPlayer = this.renderPlayer.bind(this);\n    this.renderMyInfo = this.renderMyInfo.bind(this);\n    this.chooseOption = this.chooseOption.bind(this);\n    this.raiseSlider = this.raiseSlider.bind(this);\n    this.renderCard = this.renderCard.bind(this);\n    this.decodeCard = this.decodeCard.bind(this);\n  }\n\n  componentWillMount() {\n    if (typeof this.props.location.state === 'undefined') {\n      this.setState({\n        isLoggedIn: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.location.state === 'undefined') {\n      this.setState({\n        isLoggedIn: false\n      });\n    } //Socket handlers\n\n\n    if (socket != null) {\n      socket.on(\"left_room\", message => {\n        this.setState({\n          theMessage: message\n        });\n        console.log(this.state.theMessage);\n        socket.emit('active_player_list', this.props.location.state.roomID, pl_list => {\n          this.setState({\n            theList: pl_list\n          });\n        });\n      });\n      socket.on(\"vip\", () => {\n        this.setState({\n          is_vip: true\n        });\n        console.log(\"You are the VIP\");\n      });\n      socket.on(\"disconnect\", () => {\n        console.log(\"Disconnected!!\");\n        this.setState({\n          stillIn: false\n        });\n      });\n      socket.on(\"message\", message => {\n        this.setState({\n          theMessage: message\n        });\n        console.log(this.state.theMessage);\n      });\n      socket.on(\"new_hand\", () => {\n        this.setState({\n          cards: ['', '', '', '', '']\n        });\n        this.setState({\n          raiseAmount: 50\n        });\n      });\n      socket.on('emit_hand', (card1, card2) => {\n        this.setState({\n          hand: [card1, card2]\n        });\n        console.log(\"Your hand:\" + this.state.hand[0] + ', ' + this.state.hand[1]);\n      });\n      socket.on('board_init_info', board_info => {\n        this.setState({\n          'dealer': board_info[0]\n        });\n        this.setState({\n          'small_blind': board_info[1]\n        });\n        this.setState({\n          'big_blind': board_info[2]\n        });\n        this.setState({\n          'minimum_bet': board_info[3]\n        });\n        this.setState({\n          'round_num': board_info[4]\n        });\n      });\n      socket.on('update_players', list => {\n        this.setState({\n          theList: list\n        });\n      });\n      socket.on('which_players_turn', data => {\n        console.log(this.state.theList); // var me = this.state.theList.filter(function(player) {\n        //     return player._client_number === data[0];\n        // });\n        // console.log(me);\n        // this.setState({theMessage:(me[0]._name + \" has to go\")});\n        // Update minimum bet\n\n        this.setState({\n          minimum_bet: data[1]\n        }); // Update the pot\n\n        let thePot = 0;\n\n        for (let player of this.state.theList) {\n          thePot += player._investment;\n        }\n\n        this.setState({\n          pot: thePot\n        });\n        console.log(\"Pot: \" + this.state.pot); // Update the player balance\n\n        userData.getBalance(this.props.location.state.username).then(response => {\n          this.setState({\n            balance: response\n          });\n        });\n      });\n      socket.on('your_turn', (balance, investment, minimum_bet, checkOrCall, ack) => {\n        let choice = \"\";\n        this.setState({\n          myTurn: true\n        });\n        this.setState({\n          theCheckorCall: checkOrCall\n        });\n\n        var myFunc = () => {\n          if (this.state.option != '') {\n            this.setState({\n              myTurn: false\n            });\n            choice = this.state.option;\n            this.setState({\n              option: ''\n            });\n            ack(choice);\n          } else {\n            setTimeout(() => {\n              myFunc();\n            }, 500);\n          }\n        };\n\n        myFunc();\n      });\n      socket.on(\"raise\", (ask, ack) => {\n        ack(this.state.raiseAmount);\n      });\n      socket.on('you_timed_out', () => {\n        this.setState({\n          myTurn: false\n        });\n      });\n      socket.on('flop', flop => {\n        let array = flop.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n        this.setState({\n          cards: [array[0], array[1], array[2], '', '']\n        });\n      });\n      socket.on('turn', turn => {\n        let array = turn.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n        this.setState({\n          cards: [array[0], array[1], array[2], array[3], '']\n        });\n      });\n      socket.on('river', river => {\n        let array = river.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n        this.setState({\n          cards: [array[0], array[1], array[2], array[3], array[4]]\n        });\n      });\n      socket.on('game_ended', message => {\n        console.log(message);\n        socket.disconnect();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (socket != null) {\n      socket.off('left_room');\n      socket.off('vip');\n      socket.off('disconnect');\n      socket.off('message');\n      socket.off('new_hand');\n      socket.off('emit_hand');\n      socket.off('board_init_info');\n      socket.off('update_players');\n      socket.off('which_players_turn');\n      socket.off('your_turn');\n      socket.off('raise');\n      socket.off('you_timed_out');\n      socket.off('flop');\n      socket.off('turn');\n      socket.off('river');\n      socket.off('game_ended');\n    }\n  }\n\n  render() {\n    if (!this.state.isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/Login\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this);\n    } else if (!this.state.stillIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/Home\",\n          state: {\n            username: this.props.location.state.username\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        variant: \"warning\",\n        centered: true,\n        show: this.state.modal,\n        onHide: () => {\n          this.setState({\n            modal: false\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Are you sure you want to leave the game?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"You will not be able to join back into the game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => {\n              this.setState({\n                modal: false\n              });\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.handleLeave,\n            children: \"LEAVE GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => {\n                this.setState({\n                  modal: true\n                });\n              },\n              children: \"LEAVE GAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            style: {\n              fontSize: \"1.5em\"\n            },\n            pill: true,\n            variant: \"light\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"ROUND: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 78\n            }, this), this.state.round_num]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          style: {\n            marginBottom: \"1vh\"\n          },\n          className: \"justify-content-center\",\n          horizontal: true,\n          children: this.state.theList.map(player => {\n            return this.renderPlayer(player);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          style: {\n            marginBottom: \"1vh\"\n          },\n          className: \"justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontSize: \"1.5em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"light\",\n              pill: true,\n              children: \"POT: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 49\n            }, this), \" $\", this.state.pot]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontSize: \"1.5em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"light\",\n              pill: true,\n              children: \"MINIMUM BET: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 49\n            }, this), \" $\", this.state.minimum_bet]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }, this), this.state.cards.map((card, index) => {\n          return this.renderCard(card, index);\n        }), /*#__PURE__*/_jsxDEV(Nav, {\n          style: {\n            margin: \"1rem\"\n          },\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontSize: \"1.5em\"\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Badge, {\n              variant: \"light\",\n              pill: true,\n              children: this.state.theMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 118\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          style: {\n            margin: \"1rem\"\n          },\n          className: \"justify-content-center\",\n          children: this.state.theList.filter(player => player._name === this.props.location.state.username).map(me => {\n            return this.renderMyInfo(me);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this), this.state.hand.map((card, index) => {\n          return this.renderCard(card, index);\n        }), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            trigger: \"click\",\n            placement: \"top-end\",\n            overlay: /*#__PURE__*/_jsxDEV(Popover, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: \"30vw\"\n                },\n                src: \"images/Rankings.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: \"blue\"\n              },\n              variant: \"warning\",\n              children: \"Poker Hierarchy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            horizontal: true,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              disabled: !this.state.myTurn,\n              name: \"CheckorCall\",\n              onClick: this.chooseOption,\n              style: {\n                color: \"blue\",\n                marginRight: \"1vw\"\n              },\n              variant: \"warning\",\n              children: this.state.theCheckorCall\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !this.state.myTurn,\n              name: \"Fold\",\n              onClick: this.chooseOption,\n              variant: \"danger\",\n              children: \"FOLD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !this.state.myTurn || this.state.balance == 0,\n              name: \"Raise\",\n              onClick: this.chooseOption,\n              style: {\n                color: \"blue\",\n                marginLeft: \"1vw\"\n              },\n              variant: \"warning\",\n              children: \"RAISE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"D, sb, bb list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/Game/Game.js"],"names":["React","Component","Header","Home","Login","Link","Redirect","userData","io","Alert","ListGroup","Button","ListGroupItem","Modal","Nav","Card","Badge","OverlayTrigger","Popover","socket","Game","constructor","props","renderPlayer","player","_name","location","state","username","marginRight","backgroundColor","opacity","_isFolded","_isBankrupt","_connected","_balance","_investment","_client_id","renderMyInfo","me","balance","renderCard","card","index","width","decodeCard","array","split","suit","toLowerCase","rank","chooseOption","event","preventDefault","console","log","target","name","setState","option","raiseSlider","raiseAmount","value","handleLeave","disconnect","isLoggedIn","stillIn","is_vip","theList","cards","hand","dealer","small_blind","big_blind","minimum_bet","round_num","pot","myTurn","theMessage","theCheckorCall","modal","bind","componentWillMount","componentDidMount","on","message","emit","roomID","pl_list","card1","card2","board_info","list","data","thePot","getBalance","then","response","investment","checkOrCall","ack","choice","myFunc","setTimeout","ask","flop","match","turn","river","componentWillUnmount","off","render","pathname","fontSize","marginBottom","map","margin","filter","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from \"../BasicComponents/Header\"\nimport Home from \"../Home/Home\";\nimport Login from \"../Login/Login\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport userData from \"../axiosCalls.js\";\nimport io from \"socket.io-client\";\nimport {Alert, ListGroup, Button, ListGroupItem, Modal, Nav, Card, Badge, OverlayTrigger, Popover} from 'react-bootstrap'\nimport {socket} from \"../socket.js\"\n\n\nexport default class Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn:true,\n            stillIn:true,\n            is_vip:false,\n            balance:null,\n            theList:[],\n            cards:['','','','',''],\n            hand:[],\n            dealer:'',\n            small_blind:'',\n            big_blind:'',\n            minimum_bet:'',\n            round_num:'0',\n            pot:0,\n            myTurn:false,\n            theMessage:'GAME HAS BEGUN',\n            theCheckorCall:'Check',\n            raiseAmount:50,\n            option:'',\n            modal:false\n\n        };\n        this.handleLeave = this.handleLeave.bind(this);\n        this.renderPlayer = this.renderPlayer.bind(this)\n        this.renderMyInfo = this.renderMyInfo.bind(this);\n        this.chooseOption = this.chooseOption.bind(this);\n        this.raiseSlider = this.raiseSlider.bind(this);\n        this.renderCard = this.renderCard.bind(this);\n        this.decodeCard = this.decodeCard.bind(this);      \n\n    }\n\n    componentWillMount(){\n        if(typeof this.props.location.state === 'undefined'){\n            this.setState({isLoggedIn: false});\n        }\n    }\n\n\n    componentDidMount(){\n        if(typeof this.props.location.state === 'undefined'){\n            this.setState({isLoggedIn: false});\n        }\n\n        //Socket handlers\n        if(socket != null){\n        socket.on(\"left_room\", (message) => {\n            this.setState({theMessage:message});\n            console.log(this.state.theMessage);\n            socket.emit('active_player_list', this.props.location.state.roomID, (pl_list) => {\n                this.setState({theList:pl_list});\n            });\n        });\n        socket.on(\"vip\", () => {\n            this.setState({is_vip: true})\n            console.log(\"You are the VIP\")\n        });\n        socket.on(\"disconnect\", () => {\n            console.log(\"Disconnected!!\");\n            this.setState({stillIn:false}); \n        });\n        socket.on(\"message\", (message) => {\n            this.setState({theMessage:message});\n            console.log(this.state.theMessage);\n        });\n        socket.on(\"new_hand\", () => {\n            this.setState({cards:['','','','','']});\n            this.setState({raiseAmount:50});\n        });\n        socket.on('emit_hand', (card1, card2) => {\n            this.setState({hand:[card1, card2]});\n            console.log(\"Your hand:\" + this.state.hand[0] + ', ' + this.state.hand[1]);\n\n        });\n        socket.on('board_init_info', (board_info) => {\n            this.setState({'dealer': board_info[0]})\n            this.setState({'small_blind': board_info[1]})\n            this.setState({'big_blind': board_info[2]})\n            this.setState({'minimum_bet': board_info[3]})\n            this.setState({'round_num': board_info[4]})\n        });\n        socket.on('update_players', (list) => {\n            this.setState({theList:list});\n        })\n        socket.on('which_players_turn', (data) => {\n            console.log(this.state.theList);\n\n            // var me = this.state.theList.filter(function(player) {\n            //     return player._client_number === data[0];\n            // });\n            // console.log(me);\n            // this.setState({theMessage:(me[0]._name + \" has to go\")});\n\n            // Update minimum bet\n            this.setState({minimum_bet:data[1]});\n\n            // Update the pot\n            let thePot = 0\n            for(let player of this.state.theList){\n                thePot += player._investment;\n            }\n            this.setState({pot:thePot});\n            console.log(\"Pot: \" + this.state.pot);\n\n            // Update the player balance\n            userData.getBalance(this.props.location.state.username)\n            .then((response) => {\n                this.setState({balance:response});\n            })\n        });\n        socket.on('your_turn', (balance, investment, minimum_bet, checkOrCall, ack) => {\n            let choice = \"\";\n            this.setState({myTurn:true});\n            this.setState({theCheckorCall:checkOrCall});\n            var myFunc = () => {\n                if(this.state.option != ''){\n                    this.setState({myTurn:false});\n                    choice = this.state.option\n                    this.setState({option:''});\n                    ack(choice);\n                }\n                else {\n                    setTimeout(() => {myFunc()}, 500)\n                }\n            }\n            myFunc();\n        });\n        socket.on(\"raise\", (ask, ack) => {\n            ack(this.state.raiseAmount);\n        });\n        socket.on('you_timed_out', () => {\n            this.setState({myTurn:false});\n        });\n        socket.on('flop', (flop) => {\n            let array = flop.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n            this.setState({cards:[array[0], array[1], array[2], '', '']});\n        });\n        socket.on('turn', (turn) => {\n            let array = turn.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n            this.setState({cards:[array[0], array[1], array[2], array[3], '']});\n        });\n        socket.on('river', (river) => {\n            let array = river.match(/\\b[\\w']+(?:[^\\w\\n]+[\\w']+){0,3}\\b/g);\n            this.setState({cards:[array[0], array[1], array[2], array[3], array[4]]});\n        });\n        socket.on('game_ended', (message) => {\n            console.log(message);\n            socket.disconnect();\n        });\n    }\n    }\n\n    componentWillUnmount(){\n        if(socket!= null){\n        socket.off('left_room');\n        socket.off('vip');\n        socket.off('disconnect');\n        socket.off('message');\n        socket.off('new_hand');\n        socket.off('emit_hand');\n        socket.off('board_init_info');\n        socket.off('update_players');\n        socket.off('which_players_turn');\n        socket.off('your_turn');\n        socket.off('raise');\n        socket.off('you_timed_out');\n        socket.off('flop');\n        socket.off('turn');\n        socket.off('river');\n        socket.off('game_ended');\n        }\n    \n    }\n\n    renderPlayer = (player) => {  \n        if(player._name != this.props.location.state.username){\n        return(\n            <Card key = {player._client_id} text='black' style={{marginRight: \"1vw\", backgroundColor:\"#C3770F\", opacity: ((player._isFolded || player._isBankrupt || !player._connected) ? \"50%\" : \"100%\")}}>\n                <Card.Header><b>{player._name}</b></Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                         <i>Balance: </i><b>${player._balance}</b><br></br>\n                        <i>Investment: </i><b>${player._investment}</b>\n                    </Card.Text>\n\n                </Card.Body>\n            </Card>\n            \n        )\n        }\n    }\n\n    renderMyInfo = (me) => {\n        return (\n            <Card key = {me._client_id} text='black' style={{backgroundColor:\"#C3770F\"}}>\n                <Card.Body>\n                <i>Your balance: </i><b>{this.state.balance}</b><br></br>\n                <i>Your investment: </i><b>{me._investment}</b>\n                </Card.Body>\n            </Card>\n        )\n    }\n\n    renderCard = (card, index) => {\n        return(\n                <img style = {{marginRight:\"1vw\", width:\"6.5vw\"}} key = {index} src = {this.decodeCard(card)}/>\n        )\n    }\n\n    decodeCard = (card) => {\n        if(card != '') {\n        let array = card.split(\" \");\n        let suit = array[1].toLowerCase();\n        let rank = array[3];\n        switch(rank){\n        case(\"11\"):\n            rank = \"jack\"\n            break;\n        case(\"12\"):\n            rank = \"queen\"\n            break;\n        case(\"13\"):\n            rank = \"king\"\n            break;\n        case(\"14\"):\n            rank = \"ace\"\n            break;\n        }\n        return \"images/\" + rank + \"_of_\" + suit + \"s.png\";\n    }\n    else{\n        return \"images/back.png\";\n    }\n    }\n\n    chooseOption = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        switch(event.target.name){\n            case \"CheckorCall\":\n                this.setState({option:\"1\"});\n                break;\n            case \"Fold\":\n                this.setState({option:\"2\"});\n                break;\n            case \"Raise\":\n                this.setState({option:\"3\"});  \n                break;     \n        }\n    }\n\n    raiseSlider = (event) => {\n        event.preventDefault();\n        this.setState({raiseAmount:event.target.value});\n    }\n    \n    //When Player exits to main menu\n    handleLeave = (event) => {\n        event.preventDefault();\n        socket.disconnect();\n    }\n\n    render() {\n        if(!this.state.isLoggedIn){\n            return(\n                <Redirect\n                to={{\n                    pathname: \"/Login\"\n                }}\n                />\n            )\n        }\n        else if(!this.state.stillIn){\n            return(\n                <Redirect\n                to={{\n                    pathname: \"/Home\",\n                    state:{\n                        username: this.props.location.state.username\n                    }\n\n                }}\n                />\n            )\n        }\n        return (\n            <>\n                <Modal variant = \"warning\" centered show={this.state.modal} onHide={() => {this.setState({modal:false})}} >\n                    <Modal.Header closeButton><Modal.Title>Are you sure you want to leave the game?</Modal.Title></Modal.Header>\n                    <Modal.Body>You will not be able to join back into the game!</Modal.Body>\n                    <Modal.Footer> \n                    <Button variant=\"secondary\" onClick={() => {this.setState({modal:false})}}>Close</Button>\n                    <Button variant = \"danger\" onClick = {this.handleLeave}>LEAVE GAME</Button>\n                    </Modal.Footer>\n                </Modal>\n            <body>\n                <Nav className=\"justify-content-between\">\n                    <Nav.Item><Button variant = \"danger\" onClick = {() => {this.setState({modal:true})}}>LEAVE GAME</Button></Nav.Item>\n                    <Badge style = {{fontSize:\"1.5em\"}} pill variant=\"light\"><b>ROUND: </b>{this.state.round_num}</Badge>\n                </Nav>\n                <ListGroup style = {{marginBottom:\"1vh\"}} className = \"justify-content-center\" horizontal>\n                    {this.state.theList.map((player)=> {return this.renderPlayer(player)})}\n                </ListGroup>\n                <Nav style = {{marginBottom:\"1vh\"}} className = \"justify-content-around\">\n                <b style = {{fontSize:\"1.5em\"}}><Badge variant=\"light\" pill>POT: </Badge> ${this.state.pot}</b>\n                <b style = {{fontSize:\"1.5em\"}}><Badge  variant=\"light\" pill>MINIMUM BET: </Badge> ${this.state.minimum_bet}</b></Nav>\n                {this.state.cards.map((card, index)=> {return this.renderCard(card, index)})}\n                <Nav style = {{margin:\"1rem\"}} className = \"justify-content-center\"><b style = {{fontSize:\"1.5em\"}}> <Badge variant=\"light\" pill >{this.state.theMessage}</Badge></b></Nav>\n                <Nav style = {{margin:\"1rem\"}} className = \"justify-content-center\">{this.state.theList.filter(player => player._name === this.props.location.state.username).map((me) => {return this.renderMyInfo(me)})}</Nav>\n                {this.state.hand.map((card, index)=> {return this.renderCard(card, index)})}\n                <Nav className = \"justify-content-between\">\n               <OverlayTrigger\n                trigger=\"click\"\n                placement='top-end'\n                overlay={\n                    <Popover>\n                            <img style = {{width:\"30vw\"}} src = \"images/Rankings.png\"></img>\n                    </Popover>}>\n                <Button style = {{color:\"blue\"}} variant=\"warning\">Poker Hierarchy</Button>\n                </OverlayTrigger>\n                <ListGroup horizontal>\n                    <Button disabled = {!this.state.myTurn} name = 'CheckorCall' onClick = {this.chooseOption} style = {{color:\"blue\", marginRight:\"1vw\"}} variant=\"warning\">{this.state.theCheckorCall}</Button>\n                    <Button disabled = {!this.state.myTurn} name = 'Fold' onClick = {this.chooseOption} variant = \"danger\">FOLD</Button>\n                    <Button disabled = {!this.state.myTurn || this.state.balance == 0} name = 'Raise' onClick = {this.chooseOption} style = {{color:\"blue\", marginLeft:\"1vw\"}} variant=\"warning\">RAISE</Button>\n                </ListGroup>\n                {/* <ListGroup>\n                    <ListGroupItem><img style = {{width:\"3vw\"}} src = \"images/D.png\"></img>: {this.state.dealer}</ListGroupItem>\n                    <ListGroupItem><img style = {{width:\"3vw\"}} src = \"images/SB.png\"></img>: {this.state.small_blind}</ListGroupItem>\n                    <ListGroupItem><img style = {{width:\"3vw\"}} src = \"images/BB.png\"></img>: {this.state.big_blind}</ListGroupItem>\n                </ListGroup> */}\n                <p>D, sb, bb list</p>\n               </Nav>\n            </body>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}