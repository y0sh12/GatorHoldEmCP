{"ast":null,"code":"var _jsxFileName = \"/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/ForgotPasswordEmail/ForgotPasswordEmail.js\";\nimport React, { Component } from 'react';\nimport './ForgotPasswordEmail.css';\nimport Header from \"../BasicComponents/Header\";\nimport userData from \"../axiosCalls.js\";\nimport { Redirect, Link } from 'react-router-dom';\nimport { Alert, Form, Button, Spinner, Nav, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ForgotPasswordEmail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSend = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      userData.resetPassEmail(this.state).then(response => {\n        console.log(response);\n\n        if (response.isSent) {\n          this.setState({\n            isError: ''\n          });\n          this.setState({\n            isSent: true\n          });\n          this.setState({\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isError: response.errors\n          });\n          this.setState({\n            isLoading: false\n          });\n          this.setState({\n            isSent: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      email: '',\n      isError: '',\n      isSent: false,\n      isLoading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            display: \"inline-block\",\n            width: \"25vw\",\n            marginBottom: \"1vh\"\n          },\n          onSubmit: this.handleSend,\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            show: this.state.isSent,\n            variant: \"primary\",\n            children: \"A password reset link has been sent to your email!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            dismissible: true,\n            onClose: () => this.setState({\n              isError: ''\n            }),\n            show: this.state.isError != '',\n            variant: \"danger\",\n            children: this.state.isError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Email*: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: \"1.2em\",\n                      height: \"1.2em\"\n                    },\n                    src: \"images/Email.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"email\",\n                placeholder: \"Email ID\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: this.state.isLoading,\n            style: {\n              color: \"blue\"\n            },\n            variant: \"warning\",\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"SUBMIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 120\n            }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              color: \"blue\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Back to \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              style: {\n                color: \"blue\",\n                display: \"inline\",\n                padding: \"0\"\n              },\n              href: \"/Login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/ForgotPasswordEmail/ForgotPasswordEmail.js"],"names":["React","Component","Header","userData","Redirect","Link","Alert","Form","Button","Spinner","Nav","InputGroup","ForgotPasswordEmail","constructor","props","handleSend","event","preventDefault","setState","isLoading","resetPassEmail","state","then","response","console","log","isSent","isError","errors","email","handleChange","bind","target","name","value","render","display","width","marginBottom","float","height","color","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ForgotPasswordEmail.css';\nimport Header from \"../BasicComponents/Header\"\nimport userData from \"../axiosCalls.js\";\nimport { Redirect, Link } from 'react-router-dom';\nimport {Alert, Form, Button, Spinner, Nav, InputGroup} from 'react-bootstrap'\n\nexport default class ForgotPasswordEmail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            isError:'',\n            isSent:false,\n            isLoading:false\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSend = this.handleSend.bind(this);\n      }\n\n      handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n      handleSend = (event) => {\n        event.preventDefault();\n        this.setState({isLoading:true});\n        userData.resetPassEmail(this.state)\n            .then((response) => {\n                console.log(response)\n                if(response.isSent){\n                    this.setState({isError:''})\n                    this.setState({isSent: true});\n                    this.setState({isLoading:false});\n                }\n                else{\n                    this.setState({isError:response.errors});\n                    this.setState({isLoading:false});\n                    this.setState({isSent: false});\n                }\n            })\n      }\n\n    render() {\n        return (\n            <>\n                <body>\n                    <Header/>\n                <Form style = {{display:\"inline-block\", width:\"25vw\", marginBottom: \"1vh\"}} onSubmit={this.handleSend}>\n                 <Alert show = {this.state.isSent} variant = \"primary\">A password reset link has been sent to your email!</Alert>\n                <Alert dismissible onClose = {() => this.setState({isError:''})}show = {this.state.isError != ''} variant = \"danger\">{this.state.isError}</Alert>\n                    <Form.Group >\n                        <Form.Label style = {{float:\"left\"}}><b>Email*: </b></Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text><img style = {{width:\"1.2em\", height:\"1.2em\"}} src = \"images/Email.png\"></img></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control required type=\"email\" placeholder=\"Email ID\" name= \"email\" value={this.state.email} onChange={this.handleChange.bind(this)} />\n                        </InputGroup>\n                    </Form.Group>\n                    <Button disabled = {this.state.isLoading} style = {{color:\"blue\"}} variant=\"warning\" type=\"submit\"><b>SUBMIT</b>\n                    {this.state.isLoading && <Spinner animation=\"border\" color = \"blue\" size=\"sm\"></Spinner>}\n                    </Button>\n                </Form>\n                <p>Back to <span><Nav.Link style = {{color: \"blue\", display:\"inline\", padding:\"0\"}} href = \"/Login\">Login</Nav.Link></span></p>\n                </body>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}