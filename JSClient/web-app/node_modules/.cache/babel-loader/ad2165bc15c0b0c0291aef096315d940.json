{"ast":null,"code":"var _jsxFileName = \"/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/ForgotPassword/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport './ForgotPassword.css';\nimport userData from \"../axiosCalls.js\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from \"../BasicComponents/Header\";\nimport { Alert, Form, Button, Spinner, Nav, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReset = event => {\n      //Axios calls to API\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n\n      if (/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(this.state.new_password) && /\\d/.test(this.state.new_password) && this.state.new_password.length >= 8) {\n        userData.resetPass(this.state).then(response => {\n          console.log(response);\n\n          if (response.isReset === false) {\n            this.setState({\n              isError: response.errors\n            });\n            this.setState({\n              isReset: false\n            });\n            this.setState({\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              isReset: true\n            });\n            this.setState({\n              isError: ''\n            });\n            this.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isError: 'Your password must have at least 8 characters, a special character, and a number!'\n        });\n        this.setState({\n          isLoading: false\n        });\n        this.setState({\n          isReset: false\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      new_password: '',\n      confirm_new_password: '',\n      isReset: false,\n      isError: '',\n      show: false,\n      isLoading: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.matchingPasswords = this.matchingPasswords.bind(this);\n  }\n\n  matchingPasswords() {\n    return this.state.new_password === this.state.confirm_new_password;\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    let warning = '';\n\n    if (!this.matchingPasswords()) {\n      warning = 'New passwords not matching!';\n    } else {\n      warning = '';\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reset your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            display: \"inline-block\",\n            width: \"25vw\"\n          },\n          onSubmit: this.handleReset,\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            show: this.state.isReset,\n            variant: \"primary\",\n            children: [\"Your password has been reset!\", /*#__PURE__*/_jsxDEV(Nav.Link, {\n              style: {\n                color: \"blue\",\n                display: \"inline\",\n                padding: \"0\"\n              },\n              href: \"/Login\",\n              children: \" Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 101\n            }, this), \" now!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            dismissible: true,\n            onClose: () => this.setState({\n              isError: ''\n            }),\n            show: this.state.isError != '',\n            variant: \"danger\",\n            children: this.state.isError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Email*: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: \"1.2em\",\n                      height: \"1.2em\"\n                    },\n                    src: \"images/Email.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"email\",\n                placeholder: \"Email ID\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"New Password*: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                style: {\n                  fontSize: \"0.6em\"\n                },\n                children: \"(min 8 characters, a special character, and a number)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 84\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: \"1.2em\",\n                      height: \"1.2em\"\n                    },\n                    src: \"images/Password.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: this.state.show ? 'text' : 'password',\n                placeholder: \"New Password\",\n                name: \"new_password\",\n                value: this.state.new_password,\n                onChange: this.handleChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              style: {\n                float: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Confirm New Password*: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    style: {\n                      width: \"1.2em\",\n                      height: \"1.2em\"\n                    },\n                    src: \"images/Password.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: this.state.show ? 'text' : 'password',\n                placeholder: \"Confirm New Password\",\n                name: \"confirm_new_password\",\n                value: this.state.confirm_new_password,\n                onChange: this.handleChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              style: {\n                float: \"left\"\n              },\n              onChange: () => {\n                this.setState({\n                  show: !this.state.show\n                });\n              },\n              type: \"checkbox\",\n              label: \"Show Passwords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            show: warning != '',\n            variant: \"warning\",\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 87\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: this.state.isLoading || warning != '',\n            style: {\n              color: \"blue\"\n            },\n            variant: \"warning\",\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"RESET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 137\n            }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              color: \"blue\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/ForgotPassword/ForgotPassword.js"],"names":["React","Component","userData","Redirect","Link","Header","Alert","Form","Button","Spinner","Nav","InputGroup","ForgotPassword","constructor","props","handleReset","event","preventDefault","setState","isLoading","test","state","new_password","length","resetPass","then","response","console","log","isReset","isError","errors","email","confirm_new_password","show","handleChange","bind","matchingPasswords","target","name","value","render","warning","display","width","color","padding","float","height","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ForgotPassword.css';\nimport userData from \"../axiosCalls.js\";\nimport { Redirect, Link } from 'react-router-dom';\nimport Header from \"../BasicComponents/Header\"\nimport {Alert, Form, Button, Spinner, Nav, InputGroup} from 'react-bootstrap'\n\nexport default class ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            new_password: '',\n            confirm_new_password: '',\n            isReset:false,\n            isError:'',\n            show:false,\n            isLoading:false\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.matchingPasswords = this.matchingPasswords.bind(this);\n      }\n\n\n      matchingPasswords() {\n        return (this.state.new_password === this.state.confirm_new_password);\n       } \n\n\n      handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n\n      handleReset = (event)  => {\n        //Axios calls to API\n        event.preventDefault();\n        this.setState({isLoading: true});\n        if(/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(this.state.new_password) && /\\d/.test(this.state.new_password) && this.state.new_password.length >= 8){\n            userData.resetPass(this.state)\n            .then((response) => {\n                console.log(response);\n                if(response.isReset === false){\n                    this.setState({isError:response.errors});\n                    this.setState({isReset: false});\n                    this.setState({isLoading: false});\n                }\n                else{\n                    this.setState({isReset: true});\n                    this.setState({isError:''});\n                    this.setState({isLoading: false});\n                }\n            })\n        }\n        else{\n            this.setState({isError: 'Your password must have at least 8 characters, a special character, and a number!'});\n            this.setState({isLoading: false});\n            this.setState({isReset: false});\n        }\n    } \n\n    render() {\n        let warning = '';\n        if (!this.matchingPasswords()){\n            warning = 'New passwords not matching!'\n        }\n        else{\n            warning = '';\n        }\n        return (\n            <>\n                <body>\n                <Header />\n                <h3>Reset your Password</h3><br></br>\n                <Form style = {{display:\"inline-block\", width:\"25vw\"}} onSubmit={this.handleReset}>\n                <Alert show = {this.state.isReset} variant = \"primary\">Your password has been reset!<Nav.Link style = {{color: \"blue\", display:\"inline\", padding:\"0\"}} href = \"/Login\"> Login</Nav.Link> now!</Alert>\n                <Alert dismissible onClose = {() => this.setState({isError:''})} show = {this.state.isError != ''} variant = \"danger\">{this.state.isError}</Alert>\n                    <Form.Group >\n                        <Form.Label style = {{float:\"left\"}}><b>Email*: </b></Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text><img style = {{width:\"1.2em\", height:\"1.2em\"}} src = \"images/Email.png\"></img></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control required type=\"email\" placeholder=\"Email ID\" name= \"email\" value={this.state.email} onChange={this.handleChange} />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label style = {{float:\"left\"}}><b>New Password*: </b><i style = {{fontSize:\"0.6em\"}}>(min 8 characters, a special character, and a number)</i></Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text><img style = {{width:\"1.2em\", height:\"1.2em\"}} src = \"images/Password.png\"></img></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control required type={this.state.show ? 'text':'password'} placeholder=\"New Password\" name= \"new_password\" value={this.state.new_password} onChange={this.handleChange.bind(this)} />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label style = {{float:\"left\"}}><b>Confirm New Password*: </b></Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text><img style = {{width:\"1.2em\", height:\"1.2em\"}} src = \"images/Password.png\"></img></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control required type={this.state.show ? 'text':'password'} placeholder=\"Confirm New Password\" name= \"confirm_new_password\" value={this.state.confirm_new_password} onChange={this.handleChange.bind(this)} />\n                        </InputGroup>\n                        <Form.Check style = {{float:\"left\"}} onChange = {() => {this.setState({show:!this.state.show})}} type=\"checkbox\" label=\"Show Passwords\" />\n                    </Form.Group><br></br>\n                   <Alert show = {warning != ''} variant = \"warning\">{warning}</Alert><br></br>\n                    <Button disabled = {this.state.isLoading || warning != ''} style = {{color:\"blue\"}} variant=\"warning\" type=\"submit\"><b>RESET</b>\n                    {this.state.isLoading && <Spinner animation=\"border\" color = \"blue\" size=\"sm\"></Spinner>}\n                    </Button>\n                </Form>\n                </body>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}