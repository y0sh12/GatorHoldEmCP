{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nconst userData = axios.create(); //REGISTER AXIOS CALL\n\nuserData.createUser = async function (user) {\n  const response = {\n    errors: \"\",\n    created: false\n  };\n\n  try {\n    const userCreate = await axios.post('http://abaig.pythonanywhere.com/new', user);\n\n    if (userCreate.data.response === \"you have successfully added an account to the db\") {\n      response.created = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('400')) {\n      response.errors = \"Username already exists!\";\n    } else {\n      response.errors = \"Lol idk what happened\";\n    }\n  }\n\n  return response;\n}; //LOGIN AXIOS CALL\n\n\nuserData.loginUser = async function (credentials) {\n  const response = {\n    errors: \"\",\n    loggedIn: false\n  };\n  console.log(credentials);\n\n  try {\n    const userLogin = await axios.post('http://abaig.pythonanywhere.com/auth', credentials);\n\n    if (userLogin.data.response === \"True\") {\n      response.loggedIn = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('403')) {\n      response.errors = \"Username/Password do not match!\";\n    } else if (err.toString().includes('404')) {\n      response.errors = \"Username/Password does not exist!\";\n    } else {\n      response.errors = \"bruh idk what happened\";\n    }\n  }\n\n  return response;\n}; //RESET PASSWORD AXIOS CALL\n\n\nuserData.resetPass = async function (reset) {\n  const response = {\n    errors: \"\",\n    isReset: false\n  };\n\n  try {\n    const userReset = await axios.patch('http://abaig.pythonanywhere.com/forgot_password/change_password', reset);\n    console.log(userReset.data.response);\n\n    if (userReset.data.response === \"Your password has been updated!\") {\n      response.isReset = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('403')) {\n      response.errors = \"You have already used this password before, please choose a different password!\";\n    } else if (err.toString().includes('404')) {\n      response.errors = \"Username/Email does not exist!\";\n    } else if (err.toString().includes('500')) {\n      response.errors = \"bruh idk what happened\";\n    } else {\n      response.errors = \"The Password Reset link has expired!\";\n    }\n  }\n\n  return response;\n}; //SEND PASSWORD RESET LINK AXIOS CALL\n\n\nuserData.resetPassEmail = async function (email) {\n  const response = {\n    errors: \"\",\n    isSent: false\n  };\n\n  try {\n    const userReset = await axios.patch('http://abaig.pythonanywhere.com/forgot_password', email);\n\n    if (userReset.data.response.toString().includes('UTC')) {\n      response.isSent = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('404')) {\n      response.errors = \"Email does not exist!\";\n    }\n  }\n\n  return response;\n}; //SEND PASSWORD CHANGE AXIOS CALL\n\n\nuserData.changePass = async function (change) {\n  const response = {\n    errors: \"\",\n    isChanged: false\n  };\n\n  try {\n    const userChange = await axios.patch('http://abaig.pythonanywhere.com/change_password', change);\n\n    if (userChange.data.response.toString().includes(\"Your password has been updated!\")) {\n      response.isChanged = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('403')) {\n      response.errors = \"Old Password does not match username!\";\n    } else if (err.toString().includes('404')) {\n      response.errors = \"Username does not exist!\";\n    } else {\n      response.errors = \"bruh idk what happened\";\n    }\n  }\n\n  return response;\n}; //PLAYER BALANCE AXIOS CALL\n\n\nuserData.getBalance = async function (username) {\n  const userBalance = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username + '/balance');\n\n  if (userBalance.data.balance != null) {\n    return userBalance.data.balance;\n  } else {\n    return \"Balance not found\";\n  }\n}; //RESET BALANCE AXIOS CALL\n\n\nuserData.resetBalance = async function (id) {\n  const response = {\n    errors: \"\",\n    isReset: false\n  };\n  const userReset = await axios.patch('http://abaig.pythonanywhere.com/reset_balance', id);\n  console.log(userReset.data.response);\n\n  try {\n    if (userReset.data.response === \"Balance has been reset to 1000\") {\n      response.isReset = true;\n    }\n  } catch (err) {\n    if (err.toString().includes('404')) {\n      response.errors = \"Username does not exist!\";\n    } else {\n      response.errors = \"bruh idk what happened\";\n    }\n  }\n\n  return response;\n}; //PLAYER ID AXIOS CALL\n\n\nuserData.getID = async function (username) {\n  const userID = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username);\n  ;\n  return userID.data.id;\n}; //ACCOUNT VERIFICATION CHECKER AXIOS CALL\n\n\nuserData.verifiedOrNot = async function (username) {\n  const userVerified = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username);\n  return userVerified.data.email_verified;\n};\n\nexport default userData;","map":{"version":3,"sources":["/Users/KadoAruleeswar/Networking/GatorHoldEmCP/JSClient/web-app/src/axiosCalls.js"],"names":["axios","AxiosError","userData","create","createUser","user","response","errors","created","userCreate","post","data","err","toString","includes","loginUser","credentials","loggedIn","console","log","userLogin","resetPass","reset","isReset","userReset","patch","resetPassEmail","email","isSent","changePass","change","isChanged","userChange","getBalance","username","userBalance","get","balance","resetBalance","id","getID","userID","verifiedOrNot","userVerified","email_verified"],"mappings":"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","sourcesContent":["import axios, {AxiosError} from 'axios';\n\nconst userData = axios.create();\n\n\n//REGISTER AXIOS CALL\nuserData.createUser = async function(user){\n    const response = {\n        errors: \"\",\n        created: false,\n    }\n    try{\n    const userCreate = await axios.post('http://abaig.pythonanywhere.com/new', user);\n    if(userCreate.data.response === \"you have successfully added an account to the db\"){\n        response.created = true;\n    }\n}\n    catch(err){\n        if(err.toString().includes('400')) {\n        response.errors = \"Username already exists!\"\n        }\n        else{\n            response.errors = \"Lol idk what happened\"\n        }\n        }\n    return response;\n}\n\n\n//LOGIN AXIOS CALL\nuserData.loginUser = async function(credentials) {\n    const response = {\n        errors: \"\",\n        loggedIn: false,\n    }\n    console.log(credentials);\n    try{\n        const userLogin = await axios.post('http://abaig.pythonanywhere.com/auth', credentials);\n        if(userLogin.data.response === \"True\"){\n            response.loggedIn = true;\n        }\n    }\n    catch(err) {\n        if (err.toString().includes('403')){\n            response.errors = \"Username/Password do not match!\"\n        }\n        else if(err.toString().includes('404')){\n            response.errors = \"Username/Password does not exist!\"\n        }\n        else{\n            response.errors = \"bruh idk what happened\"\n        }\n    }\n    return response;\n}\n\n\n//RESET PASSWORD AXIOS CALL\nuserData.resetPass = async function(reset) {\n    const response = {\n        errors: \"\",\n        isReset: false,\n    }\n    try{\n        const userReset = await axios.patch('http://abaig.pythonanywhere.com/forgot_password/change_password', reset);\n        console.log(userReset.data.response);\n        if(userReset.data.response === \"Your password has been updated!\"){\n            response.isReset = true;\n        }\n    }\n    catch(err){\n        if (err.toString().includes('403')){\n            response.errors = \"You have already used this password before, please choose a different password!\"\n        }\n        else if(err.toString().includes('404')){\n            response.errors = \"Username/Email does not exist!\"\n        }\n        else if (err.toString().includes('500')){\n            response.errors = \"bruh idk what happened\"\n        }\n        else{\n            response.errors = \"The Password Reset link has expired!\"\n        }\n    }\n    return response;\n}\n\n//SEND PASSWORD RESET LINK AXIOS CALL\nuserData.resetPassEmail = async function(email){\n    const response = {\n        errors: \"\",\n        isSent: false,\n    }\n    try{\n        const userReset = await axios.patch('http://abaig.pythonanywhere.com/forgot_password', email);\n        if(userReset.data.response.toString().includes('UTC')){\n            response.isSent = true;\n        }\n    }\n    catch(err) {\n        if(err.toString().includes('404')){\n            response.errors = \"Email does not exist!\"\n        }\n    }\n    return response;\n}\n\n//SEND PASSWORD CHANGE AXIOS CALL\nuserData.changePass = async function(change){\n    const response = {\n        errors: \"\",\n        isChanged: false,\n    }\n    try{\n        const userChange = await axios.patch('http://abaig.pythonanywhere.com/change_password', change);\n        if(userChange.data.response.toString().includes(\"Your password has been updated!\")){\n            response.isChanged = true;\n        }\n    }\n    catch(err) {\n        if(err.toString().includes('403')){\n            response.errors = \"Old Password does not match username!\"\n        }\n        else if(err.toString().includes('404')){\n            response.errors = \"Username does not exist!\"\n        }\n        else{\n            response.errors = \"bruh idk what happened\"\n        }\n    }\n    return response;\n\n}\n\n//PLAYER BALANCE AXIOS CALL\nuserData.getBalance = async function(username) {\n        const userBalance = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username + '/balance');\n        if(userBalance.data.balance != null){\n            return userBalance.data.balance\n        }\n        else{\n            return \"Balance not found\"\n        }\n}\n\n//RESET BALANCE AXIOS CALL\nuserData.resetBalance = async function(id){\n    const response = {\n        errors: \"\",\n        isReset: false,\n    }\n    const userReset = await axios.patch('http://abaig.pythonanywhere.com/reset_balance', id);\n    console.log(userReset.data.response);\n    try{\n        if(userReset.data.response === \"Balance has been reset to 1000\") {\n            response.isReset = true;\n        }\n    }\n    catch(err){\n        if(err.toString().includes('404')){\n            response.errors = \"Username does not exist!\";\n        }\n        else{\n            response.errors = \"bruh idk what happened\";\n        }\n    }\n    return response;\n}\n\n//PLAYER ID AXIOS CALL\nuserData.getID = async function(username) {\n    const userID = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username);;\n        return userID.data.id;\n\n}\n\n\n//ACCOUNT VERIFICATION CHECKER AXIOS CALL\nuserData.verifiedOrNot = async function(username) {\n    const userVerified = await axios.get('http://abaig.pythonanywhere.com/users/find/' + username);\n    return userVerified.data.email_verified;\n}\n\n\nexport default userData;"]},"metadata":{},"sourceType":"module"}